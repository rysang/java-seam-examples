<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:security="http://www.springframework.org/schema/security" xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security-3.0.xsd
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">


  <context:component-scan base-package="ro.penteker.auktion" />

  <bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
    abstract="true">
    <property name="transactionManager" ref="transactionManager" />
    <property name="transactionAttributes">
      <props>
        <prop key="insert*">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="create*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="update*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="save*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="remove*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="delete*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="import*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED, -Exception</prop>
        <prop key="*">PROPAGATION_REQUIRED, -Exception, readOnly</prop>
      </props>
    </property>
  </bean>

  <bean id="baseReadOnlyTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
    abstract="true">
    <property name="transactionManager" ref="transactionManager" />
    <property name="transactionAttributes">
      <props>
        <prop key="get*">PROPAGATION_REQUIRED, -Exception, readOnly</prop>
      </props>
    </property>
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <value>ro.penteker.auktion.dao</value>
        <value>ro.penteker.auktion.dao.security</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
        <prop key="hibernate.hbm2ddl.auto">validate</prop>
        <prop key="hibernate.generate_statistics">true</prop>

        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="hibernate.max_fetch_depth">4</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
        <prop key="hibernate.connection.autocommit">false</prop>

      </props>
    </property>
    <property name="eventListeners">
      <map>
        <entry key="merge">
          <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
        </entry>
      </map>
    </property>
  </bean>

  <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
  <!-- <property name="dataSource" ref="dataSource" /> -->
  <!-- <property name="defaultTimeout" value="100" /> -->
  <!-- </bean> -->

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3306/auktion" />
    <property name="username" value="root" />
    <property name="password" value="hidden" />
  </bean>

</beans>